<?xml version="1.1" encoding="UTF-8" standalone="no"?><flow-definition plugin="workflow-job@2.41">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.9.1"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.9.1">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description/>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.3"/>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.32">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>RELEASE_VERSION</name>
          <description>release_version</description>
          <defaultValue>release_generator_narwhal</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GIT_COMMIT</name>
          <description>git_commit</description>
          <defaultValue>release_generator_narwhal</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>RTL_TYPE</name>
          <description>rtl_type</description>
          <defaultValue>full</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONFIG_TYPE</name>
          <description>config_type</description>
          <defaultValue>standard</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SERIES</name>
          <description>series</description>
          <defaultValue>custom</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TARGET</name>
          <defaultValue>all</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONFIG_NAMES</name>
          <defaultValue>s21,e21,u74,p550</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.4">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit/>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers/>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.93">
    <script>#!groovy
pipeline{
    agent {
    label 'SLURMTINY004'
    }
    environment {
        slackMessage = "Diem Test Build for ${JOB_NAME} [Build #: ${BUILD_NUMBER}] ${BUILD_URL}"
    }
    stages {
        stage('checkout')
        {
            steps {
                step([$class: 'WsCleanup'])
                sh 'ls -ltr'
                checkout([$class: 'GitSCM', branches: [[name: "RET-49"]], extensions: [[$class: 'CleanBeforeCheckout']], userRemoteConfigs: [[url: 'git@github.com:sifive/archive-coreip-sifive.git']]])  
                sh 'git submodule update --init federation'
                
            }
        }
        stage('build') {
           steps {
               script {
                  sh "ls"
                  sh 'cp scripts/release_tasks/inputConfigs.yaml .'
                  sh 'python3 scripts/release_tasks/input-config.py  --release_version=${RELEASE_VERSION} --git_commit=${GIT_COMMIT} --rtl_type=${RTL_TYPE} --config_type=${CONFIG_TYPE} --series=${SERIES} --target=${TARGET} '
                  //sh 'git checkout -f narwhal.02.00rc1-general; git submodule update --init federation'
        
                  CFILE = "inputConfigs_${CONFIG_TYPE}_${RTL_TYPE}_${SERIES}.yaml"
                  sh "echo $CFILE"
                  
                  sh 'python3 scripts/release_tasks/core-config.py --CONFIG_NAME=${CONFIG_NAMES} --CONFIG_TYPE=${CONFIG_TYPE}'
                  sh "cat $CFILE"
                  sh 'cat coreConfigs.yaml'
                  //wake --init .;export WAKE_ENV=sanmateo;cd scripts/release_build; python3 build_script.py --build --input_file  ../../../$CFILE"
                  //sh 'screen -S standard-e -d -m -L bash -c "cd federation;ls;git checkout automation; source scripts/load-wake ;wake --init .;export WAKE_ENV=sanmateo; cp ../$CFILE scripts/release_build/; cd scripts/release_build/; ls ; python3 build_script.py --build --input_file  $CFILE"'
                   sh "cd federation;ls;git checkout automation; source scripts/load-wake ;wake --init .;export WAKE_ENV=sanmateo; cp ../$CFILE scripts/release_build/; cd scripts/release_build/; ls ; python3 build_script.py --build --input_file  $CFILE  "

                  sh "cat $CFILE"
               }
           }
        }
    }
   \
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>