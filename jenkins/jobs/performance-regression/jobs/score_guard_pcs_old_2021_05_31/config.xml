<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Daily key benchmark score monitor and check</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.2.1"/>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>100</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.18.1">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.2">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>score_guard</assignedNode>
  <canRoam>false</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <customWorkspace>/scratch/jenkins/archived-builds/${JOB_NAME}/${BUILD_ID}</customWorkspace>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
hostname
pwd
umask 002

# Environment setup
# JOB_NAME and BUILD_NUMBER are Jenkins variables
local_build_root=/scratch/jenkins/archived-builds/$JOB_NAME/$BUILD_NUMBER
share_root=/work/sparta/regression.nettmp/score_guard
test_date=`TZ=&apos;Asia/Taipei&apos; date &apos;+%Y-%m-%d&apos;`
test_time=`TZ=&apos;Asia/Taipei&apos; date &apos;+%H%M&apos;`
test_time_db=`TZ=&apos;Asia/Taipei&apos; date &apos;+%m%d%Y%X&apos;`
target_dir=$share_root/$test_date/$test_time
echo $target_dir

# Garbage collection
function gc {
    # Move data back
    chmod go+w -R $local_build_root &amp;&gt; /dev/null || true
    rsync -ravh $local_build_root/* $target_dir &gt; $target_dir/rsync.log
    # Delete the Jenkins temporary folder
    rm -rf $local_build_root
    # Delete log more than 7 days
    find $share_root -mindepth 1 -maxdepth 1 -mtime +7 -exec rm -rf {} +
}

# Create the local/share folder
mkdir -p $local_build_root
mkdir -p $target_dir
trap gc EXIT

cd $local_build_root

#-------------DO NOT MODIFY LINES ABOVE-------------

# Doing stuff here
git clone --recursive git@github.com:sifive/score_guard.git
pushd score_guard/testfield
../pcs_get_run.sh
PERF_DB_INFO=&apos;golden_num&apos; ../pcs_get_score.sh

# If any score parsing fail, this run fails and exits
if [ -f federation/score_parsing_error ]; then
    exit 1
fi

# Then, if any perf alert raises, this run is unstable
if [ -s federation/dashboard_insert_alert.log ]; then
    exit 100
fi

popd</command>
      <configuredLocalRules/>
      <unstableReturn>100</unstableReturn>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <jenkins.plugins.slack.SlackNotifier plugin="slack@2.47">
      <baseUrl></baseUrl>
      <teamDomain>sifive</teamDomain>
      <authToken></authToken>
      <tokenCredentialId></tokenCredentialId>
      <botUser>false</botUser>
      <room>#tw-perf-team</room>
      <sendAsText>false</sendAsText>
      <iconEmoji></iconEmoji>
      <username></username>
      <startNotification>false</startNotification>
      <notifySuccess>false</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>true</notifyNotBuilt>
      <notifyUnstable>true</notifyUnstable>
      <notifyRegression>false</notifyRegression>
      <notifyFailure>false</notifyFailure>
      <notifyEveryFailure>true</notifyEveryFailure>
      <notifyBackToNormal>true</notifyBackToNormal>
      <notifyRepeatedFailure>false</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <includeFailedTests>false</includeFailedTests>
      <uploadFiles>false</uploadFiles>
      <artifactIncludes></artifactIncludes>
      <commitInfoChoice>NONE</commitInfoChoice>
      <includeCustomMessage>false</includeCustomMessage>
      <customMessage></customMessage>
      <customMessageSuccess></customMessageSuccess>
      <customMessageAborted></customMessageAborted>
      <customMessageNotBuilt></customMessageNotBuilt>
      <customMessageUnstable></customMessageUnstable>
      <customMessageFailure></customMessageFailure>
    </jenkins.plugins.slack.SlackNotifier>
    <hudson.plugins.ws__cleanup.WsCleanup plugin="ws-cleanup@0.39">
      <patterns class="empty-list"/>
      <deleteDirs>false</deleteDirs>
      <skipWhenFailed>false</skipWhenFailed>
      <cleanWhenSuccess>true</cleanWhenSuccess>
      <cleanWhenUnstable>true</cleanWhenUnstable>
      <cleanWhenFailure>true</cleanWhenFailure>
      <cleanWhenNotBuilt>true</cleanWhenNotBuilt>
      <cleanWhenAborted>true</cleanWhenAborted>
      <notFailBuild>true</notFailBuild>
      <cleanupMatrixParent>false</cleanupMatrixParent>
      <externalDelete></externalDelete>
      <disableDeferredWipeout>false</disableDeferredWipeout>
    </hudson.plugins.ws__cleanup.WsCleanup>
  </publishers>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.12"/>
  </buildWrappers>
</project>