<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.1.1"/>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>1</daysToKeep>
        <numToKeep>1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.18.1">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.3">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>perf_nightly_normal</assignedNode>
  <canRoam>false</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>H H(0-7) * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>hostname
env
pwd


export JENKINS_BUILDS_DIR=/scratch/jenkins/archived-builds

# Load wit/wake modules
. /sifive/tools/Modules/3.2.10/init/sh

# Create the Jenkins build dir if it doesn&apos;t exist
mkdir -p $JENKINS_BUILDS_DIR
cd $JENKINS_BUILDS_DIR
echo $PWD

mkdir -p $JOB_NAME/$BUILD_NUMBER
cd $JOB_NAME/$BUILD_NUMBER
echo $PWD

#start regression on master 2020/05/15
git clone git@github.com:sifive/federation.git
#git clone -b mal_spf git@github.com:sifive/federation.git
#git clone -b add-l2hwpf-outline git@github.com:sifive/federation.git
cd federation

git apply /work/ichengc/patches_for_u74_regression

export FEDERATION_GIT_HASH=`git rev-parse --short HEAD`
export FEDERATION_ROOT=`pwd`
export DASHBOARD_INFO=&quot;10.14.135.139,runner,kNHUUhP5AZkthSC8,8202,federation,${FEDERATION_GIT_HASH},coreip_u74_fcd_spf,u74&quot;
export TEST_TIMESTAMP=`date &apos;+%m%d%Y%X&apos;`


./scripts/quick-submodule-update
. rc.d/riscv-tools.bashrc
BUILD_DIR=builds ./generate-build coreip_u74_fcd

#git clone git@github.com:sifive/ooo_probe.git software/tests/ooo_probe
git clone git@github.com:sifive/lsu_probe.git software/tests/lsu_probe
git clone git@github.com:sifive/benchmarks.git software/tests/benchmark_script
git clone git@github.com:sifive/benchmark-frontend.git software/tests/benchmark-frontend

export MEM_PROBE_ROOT=`realpath software/tests/benchmark-mem_probe`
export OOO_PROBE_ROOT=`realpath software/tests/ooo_probe`
export LSU_PROBE_ROOT=`realpath software/tests/lsu_probe`
export BENCH_SCRIPT=`realpath software/tests/benchmark_script`
export FRONTEND_ROOT=`realpath software/tests/benchmark-frontend`

#tmp remove BW test
#sed -i &apos;/bw/d&apos; test-outlines/cL2_hwpf.outline

sed -i &apos;s/exclude_test(\&quot;coreip_u74_fcd/#exclude_test(\&quot;coreip_u74_fcd/g&apos; test-outlines/global_exclusions.rb

cd builds/coreip_u74_fcd
pwd
ls
. ./load-modules
python --version
which python
make sim
cd sim


OUTLINE_NAME_L2=cL2_hwpf.outline
OUTLINE_NAME=coreip_u74_fcd.outline

#Remove score check
sed -i &quot;/score_check/d&quot; $FEDERATION_ROOT/software/tests/dhrystone/manifest.yml
sed -i &quot;/score_check/d&quot; $FEDERATION_ROOT/software/tests/useries_coremark_tuned/manifest.yml

cat  &gt; $OUTLINE_NAME  &lt;&lt; EOF

#ENV[&apos;RISCV&apos;]=&quot;/sifive/tools/riscv-tools/riscv64-unknown-elf-gcc-8.2.0-2019.05.3-x86_64-linux-ubuntu14&quot;

benchmark_names = %w[
    useries_coremark_tuned
    dhrystone
]
benchmark_names.each do |name|
run_test( configure_test(
        name: name,
        raw_plusargs: [&quot;+profile&quot;],
        program: {
            mem:       &apos;memory_mem&apos;,
            data_mem:  &apos;memory_mem&apos;,
            text_mem:  &apos;memory_mem&apos;,
            cppmacros: %w[BENCHMARK_NO_PRINT],
            env:       &apos;abi&apos;,
        },

    ))
end
bestset_test_names = %w[
    ooo_probe/TestAdd
    ooo_probe/TestAnd
    ooo_probe/TestAuipc
    ooo_probe/TestCadd
    ooo_probe/TestCaddi
    ooo_probe/TestCli
    ooo_probe/TestCmv
    ooo_probe/TestCslli
    ooo_probe/TestDiv
    ooo_probe/TestLui
    ooo_probe/TestMul
    ooo_probe/TestOr
    ooo_probe/TestRem
    ooo_probe/TestSll
    ooo_probe/TestSlt
    ooo_probe/TestSra
    ooo_probe/TestSrl
    ooo_probe/TestSub
    ooo_probe/TestXor
    lsu_probe/TestForwarding
    lsu_probe/TestInterleave
    lsu_probe/TestByGroup
]

bestset_test_names.each do |name|
run_test( configure_test(
        name: name,
        raw_plusargs: [&quot;+profile&quot;],
        program: {
            mem:       &apos;memory_mem&apos;,
            data_mem:  &apos;memory_mem&apos;,
            text_mem:  &apos;memory_mem&apos;,
            env:       &apos;abi&apos;,
        },

    ))
end


frontend_probe_test = %w[
    benchmark-frontend/j64b_aligned
    benchmark-frontend/j128b_unaligned
]
text_mem_list = %w[
    memory_mem
]
cacheable_test_range = [256,128,64,32,16,8,4]


frontend_probe_test.product( text_mem_list , cacheable_test_range ) do |test,target,size|
run_test( configure_test(
      name: test,
      raw_plusargs: [&quot;+profile&quot;],
      subdir:  target+&apos;/&apos;+size.to_s,
      program: {
          mem:       &apos;memory_mem&apos;,
          data_mem:  &apos;memory_mem&apos;,
          text_mem:  target,
          cppmacros: [ &quot;TEST_SIZE=&quot;+size.to_s ,&quot;ITERATION=4&quot;],
          env:       &apos;abi&apos;,
      },
 ))
end


EOF

./sitest -j 16 @$OUTLINE_NAME  @$FEDERATION_ROOT/test-outlines/$OUTLINE_NAME_L2 +verbose

module load python

python --version

#virtualenv --python=python3 venv
python3 -m venv venv
. venv/bin/activate
python3 -m pip install cryptography
python3 -m pip install pymysql
python3 -m pip install pyyaml

bw_test_size=(4 8 16 32 64 128 256 512)
for i in ${bw_test_size[@]}
do
python $FEDERATION_ROOT/benchmark-mem_probe/bw_rd/analyze_rtlsim_result.py              --rtlOut sim/$OUTLINE_NAME_L2/enable_spf/performance_tests/bw_rd/$i/simulation.err              --detail -y sim/$OUTLINE_NAME_L2/enable_spf/performance_tests/bw_rd/$i/result.yaml --target-mem memory_mem
python $FEDERATION_ROOT/benchmark-mem_probe/bw_w/analyze_rtlsim_result.py               --rtlOut sim/$OUTLINE_NAME_L2/enable_spf/performance_tests/bw_w/$i/simulation.err               --detail -y sim/$OUTLINE_NAME_L2/enable_spf/performance_tests/bw_w/$i/result.yaml --target-mem memory_mem
done
#python $FEDERATION_ROOT/benchmark-mem_probe/stream_copy/analyze_rtlsim_result.py        --rtlOut sim/$OUTLINE_NAME_L2/enable_spf/performance_tests/stream_copy/simulation.err        --detail --to_dashboard &quot;$DASHBOARD_INFO,$TEST_TIMESTAMP&quot;
#python $FEDERATION_ROOT/benchmark-mem_probe/stream_scale/analyze_rtlsim_result.py       --rtlOut sim/$OUTLINE_NAME_L2/enable_spf/performance_tests/stream_scale/simulation.err       --detail --to_dashboard &quot;$DASHBOARD_INFO,$TEST_TIMESTAMP&quot;
#python $FEDERATION_ROOT/benchmark-mem_probe/stream_add/analyze_rtlsim_result.py         --rtlOut sim/$OUTLINE_NAME_L2/enable_spf/performance_tests/stream_add/simulation.err         --detail --to_dashboard &quot;$DASHBOARD_INFO,$TEST_TIMESTAMP&quot;
#python $FEDERATION_ROOT/benchmark-mem_probe/stream_triadd/analyze_rtlsim_result.py      --rtlOut sim/$OUTLINE_NAME_L2/enable_spf/performance_tests/stream_triadd/simulation.err      --detail --to_dashboard &quot;$DASHBOARD_INFO,$TEST_TIMESTAMP&quot;

python $FEDERATION_ROOT/benchmark-mem_probe/mem_probe/analyze_probe_result.py         --rtlOut sim/$OUTLINE_NAME_L2/enable_spf/performance_tests/mem_probe/simulation.err        --detail -y sim/$OUTLINE_NAME_L2/enable_spf/performance_tests/mem_probe/result.yaml --target-mem memory_mem
python $FEDERATION_ROOT/benchmark-mem_probe/matrix_multiply/analyze_rtlsim_result.py  --rtlOut sim/$OUTLINE_NAME_L2/enable_spf/performance_tests/matrix_multiply/simulation.err  --detail -y sim/$OUTLINE_NAME_L2/enable_spf/performance_tests/matrix_multiply/result.yaml

export DASHBOARD_INFO=&quot;10.14.135.139,runner,kNHUUhP5AZkthSC8,8202,federation,${FEDERATION_GIT_HASH},coreip_u74_fcd,u74&quot;

python $FEDERATION_ROOT/benchmark-mem_probe/mem_probe/analyze_probe_result.py         --rtlOut sim/$OUTLINE_NAME_L2/disable_spf/performance_tests/mem_probe/simulation.err        --detail -y sim/$OUTLINE_NAME_L2/disable_spf/performance_tests/mem_probe/result.yaml --target-mem memory_mem
python $FEDERATION_ROOT/benchmark-mem_probe/matrix_multiply/analyze_rtlsim_result.py  --rtlOut sim/$OUTLINE_NAME_L2/disable_spf/performance_tests/matrix_multiply/simulation.err  --detail -y sim/$OUTLINE_NAME_L2/disable_spf/performance_tests/matrix_multiply/result.yaml

bw_test_size=(4 8 16 32 64 128 256 512)
for i in ${bw_test_size[@]}
do
python $FEDERATION_ROOT/benchmark-mem_probe/bw_rd/analyze_rtlsim_result.py            --rtlOut sim/$OUTLINE_NAME_L2/disable_spf/performance_tests/bw_rd/$i/simulation.err            --detail -y sim/$OUTLINE_NAME_L2/disable_spf/performance_tests/bw_rd/$i/result.yaml --target-mem memory_mem
python $FEDERATION_ROOT/benchmark-mem_probe/bw_w/analyze_rtlsim_result.py             --rtlOut sim/$OUTLINE_NAME_L2/disable_spf/performance_tests/bw_w/$i/simulation.err             --detail -y sim/$OUTLINE_NAME_L2/disable_spf/performance_tests/bw_w/$i/result.yaml --target-mem memory_mem
done
#python $FEDERATION_ROOT/benchmark-mem_probe/stream_copy/analyze_rtlsim_result.py      --rtlOut sim/$OUTLINE_NAME_L2/disable_spf/performance_tests/stream_copy/simulation.err      --detail --to_dashboard &quot;$DASHBOARD_INFO,$TEST_TIMESTAMP&quot;
#python $FEDERATION_ROOT/benchmark-mem_probe/stream_scale/analyze_rtlsim_result.py     --rtlOut sim/$OUTLINE_NAME_L2/disable_spf/performance_tests/stream_scale/simulation.err     --detail --to_dashboard &quot;$DASHBOARD_INFO,$TEST_TIMESTAMP&quot;
#python $FEDERATION_ROOT/benchmark-mem_probe/stream_add/analyze_rtlsim_result.py       --rtlOut sim/$OUTLINE_NAME_L2/disable_spf/performance_tests/stream_add/simulation.err       --detail --to_dashboard &quot;$DASHBOARD_INFO,$TEST_TIMESTAMP&quot;
#python $FEDERATION_ROOT/benchmark-mem_probe/stream_triadd/analyze_rtlsim_result.py    --rtlOut sim/$OUTLINE_NAME_L2/disable_spf/performance_tests/stream_triadd/simulation.err    --detail --to_dashboard &quot;$DASHBOARD_INFO,$TEST_TIMESTAMP&quot;


OOO_ARRAY=(Add And Auipc Cadd Caddi Cli Cmv Cslli Div Lui Mul Or Rem Sll Slt Sra Srl Sub Xor)
for i in ${OOO_ARRAY[@]}
do
    python $OOO_PROBE_ROOT/script/analyze_probe_result.py --rtlOut  sim/$OUTLINE_NAME/ooo_probe/Test${i}/simulation.err -y sim/$OUTLINE_NAME/ooo_probe/Test${i}/result.yaml -i $i
done


python $BENCH_SCRIPT/scripts/parse_benchmark_score.py -r sim/$OUTLINE_NAME/useries_coremark_tuned/simulation.err  -e sim/$OUTLINE_NAME/useries_coremark_tuned/program.elf  -b coremark  -f 1 -i 10  -y sim/$OUTLINE_NAME/useries_coremark_tuned/result.yaml
python $BENCH_SCRIPT/scripts/parse_benchmark_score.py -r sim/$OUTLINE_NAME/dhrystone/simulation.err -e sim/$OUTLINE_NAME/dhrystone/program.elf -b dhrystone -f 1 -i 500 -y sim/$OUTLINE_NAME/dhrystone/result.yaml

python $LSU_PROBE_ROOT/script/analyze_probe_result.py --rtlOut sim/$OUTLINE_NAME/lsu_probe/TestForwarding/simulation.err --probeType TestForwarding -y sim/$OUTLINE_NAME/lsu_probe/TestForwarding/result.yaml
python $LSU_PROBE_ROOT/script/analyze_probe_result.py --rtlOut sim/$OUTLINE_NAME/lsu_probe/TestInterleave/simulation.err --probeType TestInterleave -y sim/$OUTLINE_NAME/lsu_probe/TestInterleave/result.yaml
python $LSU_PROBE_ROOT/script/analyze_probe_result.py --rtlOut sim/$OUTLINE_NAME/lsu_probe/TestByGroup/simulation.err    --probeType TestByGroup    -y sim/$OUTLINE_NAME/lsu_probe/TestByGroup/result.yaml


for i in `find sim/$OUTLINE_NAME  -type d -name &quot;benchmark-frontend&quot;`
do
    echo $i
    for j in `find $i -name &quot;simulation.err&quot;`
    do
        DIRNAME=`dirname $i`
        DIRNAME2=`dirname $DIRNAME`
        TARGET_MEM=`basename $DIRNAME2`
        python $FRONTEND_ROOT/analyze_rtlsim_result.py \
            --rtlOut $j \
            --detail    \
            -y `dirname $j`/result.yaml \
            --target-mem $TARGET_MEM

    done
done


for i in stream_add stream_scale stream_copy stream_triadd
do
    for j in `find -iname simulation.err | grep $i`
    do
        if [[ $j =~ &quot;disable_spf&quot; ]];
        then
            export DASHBOARD_INFO=&quot;10.14.135.139,runner,kNHUUhP5AZkthSC8,8202,federation,${FEDERATION_GIT_HASH},coreip_u74_fcd,u74&quot;
        else
            export DASHBOARD_INFO=&quot;10.14.135.139,runner,kNHUUhP5AZkthSC8,8202,federation,${FEDERATION_GIT_HASH},coreip_u74_fcd_spf,u74&quot;
        fi

        python $FEDERATION_ROOT/benchmark-mem_probe/$i/analyze_rtlsim_result.py  \
               --rtlOut $j                                                       \
               --detail -y `dirname $j`/result.yaml

    done
done


export DASHBOARD_INFO=&quot;10.14.135.139,runner,kNHUUhP5AZkthSC8,8202,federation,${FEDERATION_GIT_HASH},coreip_u74_fcd_spf,u74&quot;

for i in `find sim/cL2_hwpf.outline -iname simulation.err | grep multi_stream`
do
	python $FEDERATION_ROOT/benchmark-mem_probe/multi_stream/analyze_rtlsim_result.py \
               --rtlOut $i                                                            \
               --detail -y `dirname $i`/result.yaml
done


for i in `find sim/cL2_hwpf.outline -name &quot;memory_performance.csv&quot;`
do
    echo $i
    cat $i
done



ls -al

#--- insert to dashboard ---
cat &lt;&lt; EOT &gt; build.yaml
platform: federation
git_hash: ${FEDERATION_GIT_HASH}
core: u74
EOT

find sim/cL2_hwpf.outline/enable_spf sim/cL2_hwpf.outline/performance_tests/multi_stream -name result.yaml -exec cat {} + &gt; result_spf.yaml
find sim/cL2_hwpf.outline/disable_spf sim/coreip_u74_fcd.outline -name result.yaml -exec cat {} + &gt; result_no_spf.yaml

/work/sparta/scripts/insert_dashboard.py -b build.yaml --build-config coreip_u74_fcd_spf -r result_spf.yaml 2&gt;&amp;1 | tee alert.log
/work/sparta/scripts/insert_dashboard.py -b build.yaml --build-config coreip_u74_fcd -r result_no_spf.yaml 2&gt;&amp;1 | tee -a alert.log

[ ! -s alert.log ] || exit 100

</command>
      <configuredLocalRules/>
      <unstableReturn>100</unstableReturn>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <jenkins.plugins.slack.SlackNotifier plugin="slack@2.43">
      <baseUrl></baseUrl>
      <teamDomain>sifive</teamDomain>
      <authToken>P0KcFEruoxLBRNfsEgPMCuC4</authToken>
      <tokenCredentialId></tokenCredentialId>
      <botUser>false</botUser>
      <room>#tw-perf-team</room>
      <sendAsText>false</sendAsText>
      <iconEmoji></iconEmoji>
      <username></username>
      <startNotification>false</startNotification>
      <notifySuccess>false</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
      <notifyUnstable>false</notifyUnstable>
      <notifyRegression>false</notifyRegression>
      <notifyFailure>false</notifyFailure>
      <notifyEveryFailure>true</notifyEveryFailure>
      <notifyBackToNormal>false</notifyBackToNormal>
      <notifyRepeatedFailure>false</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <includeFailedTests>false</includeFailedTests>
      <uploadFiles>false</uploadFiles>
      <artifactIncludes></artifactIncludes>
      <commitInfoChoice>AUTHORS_AND_TITLES</commitInfoChoice>
      <includeCustomMessage>false</includeCustomMessage>
      <customMessage></customMessage>
      <customMessageSuccess></customMessageSuccess>
      <customMessageAborted></customMessageAborted>
      <customMessageNotBuilt></customMessageNotBuilt>
      <customMessageUnstable></customMessageUnstable>
      <customMessageFailure></customMessageFailure>
    </jenkins.plugins.slack.SlackNotifier>
  </publishers>
  <buildWrappers/>
</project>