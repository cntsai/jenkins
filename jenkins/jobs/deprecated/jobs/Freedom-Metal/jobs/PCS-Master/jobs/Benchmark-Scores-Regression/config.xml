<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Regression on Benchmark Scores driven by wit/wake</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.3"/>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>7</daysToKeep>
        <numToKeep>7</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.18.1">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.4">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@4.8.2">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>freedom-e-sdk-infra</name>
        <url>git@github.com:sifive/federation.git</url>
        <credentialsId>ad25d95a-4a30-4cc9-bda9-e836d51af0b9</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="empty-list"/>
    <extensions/>
  </scm>
  <assignedNode>freedom-metal-small</assignedNode>
  <canRoam>false</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>H H(0-7) * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>hostname
env
pwd

export PATH_TO_PRODUCT_COREIP_SIFIVE=$(realpath .)

export JENKINS_BUILDS_DIR=/scratch/jenkins/archived-builds

# Load wit/wake modules
. /sifive/tools/Modules/3.2.10/init/sh
module load sifive/wake/0.20.1
#module load sifive/wit/0.14.1
module load riscv-tools

# Create the Jenkins build dir if it doesn&apos;t exist
mkdir -p $JENKINS_BUILDS_DIR
cd $JENKINS_BUILDS_DIR
echo $PWD

# Create the build directory
mkdir -p $JOB_NAME/$BUILD_NUMBER
cd $JOB_NAME/$BUILD_NUMBER
echo $PWD

export WAKE_ENV=sanmateo

# Initialize the workspace
#wit init workspace -a $PATH_TO_PRODUCT_COREIP_SIFIVE -a git@github.com:sifive/environment-sanmateo-sifive.git
#wit init workspace -a git@github.com:sifive/federation.git -a git@github.com:sifive/environment-sanmateo-sifive.git
git clone git@github.com:sifive/federation.git workspace
cd workspace

# Initialize wake
./scripts/quick-submodule-update
wake --init .

# Run benchmarks on all standard cores
# Timeout set to 12 hours
# timeout 12h wake -p10 --no-tty -x &apos;test Verilator allSDKBenchmarks all standardJSONs&apos; 2&gt;error.log
timeout 12h wake -p10 --no-tty -x &apos;test Verilator allSDKBenchmarks all (filter (! matches `.*e27\.json|.*u84mc\.json|.*u94\.json|.*u77\.json` _) standardJSONs)&apos; 2&gt;error.log

# Measure and compare scores against their expected value
#bash ./$JOB_BASE_NAME/scripts/score_benchmarks_standard_coreip build/$JOB_BASE_NAME/ 0.05
bash ./product-coreip-sifive/scripts/score_benchmarks_standard_coreip build/product-coreip-sifive/ 0.05

</command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>