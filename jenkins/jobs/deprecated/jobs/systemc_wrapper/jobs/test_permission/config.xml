<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>test</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.1.1"/>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>3</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.18">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>FEDERATION_BRANCH</name>
          <description>The federation branch name to run the regression. </description>
          <defaultValue>master</defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.2">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>tiny</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <customWorkspace>/scratch/jenkins/archived-builds</customWorkspace>
  <builders>
    <hudson.tasks.Shell>
      <command>hostname
env
pwd

. /sifive/tools/Modules/3.2.10/init/sh
. /sifive/tools/Modules/3.2.10/init/bash

echo $WORKSPACE
export JENKINS_BUILDS_DIR=/scratch/jenkins/archived-builds

# Create the Jenkins build dir if it doesn&apos;t exist
mkdir -p $JENKINS_BUILDS_DIR
cd $JENKINS_BUILDS_DIR
echo $PWD

mkdir -p $JOB_NAME/$BUILD_NUMBER
cd $JOB_NAME/$BUILD_NUMBER
echo $PWD


# Setting federation folder
git clone  git@github.com:sifive/federation.git
cd federation

# rebase to latest master
git rebase origin/$FEDERATION_BRANCH

# Initialize git submodules and necessary environment variables
#./scripts/quick-submodule-update
. rc.d/riscv-tools.bashrc


export FEDERATION_GIT_HASH=`git rev-parse --short HEAD`
export FEDERATION_ROOT=`pwd`
export TIMESTAMP=`date &apos;+%m%d%Y%X&apos;`


### test cmd
ls $VAGCC/

cat &gt; &quot;test_path.py&quot; &lt;&lt; EOF
#!/usr/bin/env python3

def main():
  import os
  import sys
  from pathlib import Path
  try:
    path_str = &quot;bin/riscv64-unknown-elf-gcc&quot;
    gcc_path = Path(os.environ[&quot;VAGCC&quot;]) / path_str
    gcc_path.resolve()
  except Exception:
    print(
        &quot;Error: Make sure riscv64-unknown-elf-gcc exists\n&quot;
    )
    raise
  print(gcc_path)

  
if __name__ == &quot;__main__&quot;:
  main()

EOF

python3 test_path.py
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>