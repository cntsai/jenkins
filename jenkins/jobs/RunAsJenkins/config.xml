<?xml version="1.1" encoding="UTF-8" standalone="no"?><flow-definition plugin="workflow-job@2.41">
  <actions/>
  <description>Example commands:&lt;BR&gt;&#13;
&amp;nbsp # kill SLURM job 12345&lt;BR&gt;&#13;
&amp;nbsp&lt;code&gt;scancel --signal=ABRT 12345&lt;/code&gt;&#13;
&#13;
&lt;p&gt;Owners: Marshall Adrian, Mike Schoenfelder</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.3"/>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>5</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <org.jenkinsci.plugins.workflow.job.properties.DisableResumeJobProperty/>
    <org.jenkinsci.plugins.workflow.job.properties.DurabilityHintJobProperty>
      <hint>PERFORMANCE_OPTIMIZED</hint>
    </org.jenkinsci.plugins.workflow.job.properties.DurabilityHintJobProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.32">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>COMMAND</name>
          <description>Command you want to run.  To run a command on a physical machine, you have to do something like:&lt;BR&gt;
&amp;nbsp&amp;nbsp&lt;code&gt;ssh sigma00 hostname&lt;/code&gt;&lt;BR&gt;
If you need to repeat a cmd every 36 seconds, do something like:&lt;BR&gt;
&amp;nbsp&amp;nbsp&lt;code&gt;for ii in {0..100} ; do sleep 36 &amp;&amp; scancel --signal=ABRT --wckey fed_98ba4272-1ccc-4890-b93e-0b7bab68f8b3; done&lt;/code&gt;&lt;BR&gt;</description>
          <defaultValue>pwd</defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <org.jvnet.jenkins.plugins.nodelabelparameter.LabelParameterDefinition plugin="nodelabelparameter@1.9.0">
          <name>LABEL</name>
          <description>You can target specific Agent by specifying the unique label associated with that Agent (e.g. 'delta00')</description>
          <defaultValue>tiny_rhel8</defaultValue>
          <allNodesMatchingLabel>false</allNodesMatchingLabel>
          <triggerIfResult>allCases</triggerIfResult>
          <nodeEligibility class="org.jvnet.jenkins.plugins.nodelabelparameter.node.AllNodeEligibility"/>
        </org.jvnet.jenkins.plugins.nodelabelparameter.LabelParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.4">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit/>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers/>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.93">
    <script>#!groovy

node(env.LABEL) {
    
    ansiColor('xterm') {
    
        stage('checkout') {
            sh "$params.COMMAND"
        } // stage checkout
        
        stage('notify') {
            BUILD_TRIGGER_BY = "${currentBuild.getBuildCauses()[0].shortDescription}"
            slackSend channel: '#jenkins', color: '#FFFF00', message: ":jenkinstein: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL}) ${BUILD_TRIGGER_BY} executed: [$params.COMMAND]"
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>