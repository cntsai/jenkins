<?xml version="1.1" encoding="UTF-8" standalone="no"?><project>
  <actions/>
  <description>Install pip packages for Python venv (to /nfs partition)</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.7"/>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>30</daysToKeep>
        <numToKeep>10</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.18.1">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.33">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <com.cwctravel.hudson.plugins.extended__choice__parameter.ExtendedChoiceParameterDefinition plugin="extended-choice-parameter@346.vd87693c5a_86c">
          <name>PYTHON_VERSION</name>
          <quoteValue>false</quoteValue>
          <saveJSONParameterToFile>false</saveJSONParameterToFile>
          <visibleItemCount>2</visibleItemCount>
          <type>PT_CHECKBOX</type>
          <value>3.7.1, 3.9.2</value>
          <defaultValue>3.9.2</defaultValue>
          <multiSelectDelimiter> </multiSelectDelimiter>
          <projectName>install_venv_pip_nfs</projectName>
        </com.cwctravel.hudson.plugins.extended__choice__parameter.ExtendedChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PIP_PACKAGES</name>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>INSTALL_REPO</name>
          <description>Install the latest git-repo</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.6">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit/>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>tiny</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
set -e
echo "[INFO] init environment module"
source /sifive/tools/Modules/init-chooser

OS_NAME="rhel8"
VENV_PREFIX_LIST="/nfs/teams/sw/static/swqa"

check_os()
{
    OSID=$(set +u; . /etc/os-release; echo $ID)
    OSPLATFORM=$(set +u; . /etc/os-release; echo $PLATFORM_ID)

    # RHEL 8 / Centos 8 / Rocky 8 / and so on
    if [ "$OSPLATFORM" = "platform:el8" ] ; then
        OS_NAME="rhel8"
    # Ubuntu 16.04
    elif [ "$OSID" = "ubuntu" ] ; then
        OS_NAME="ubuntu"
    fi
}


for venv_prefix in ${VENV_PREFIX_LIST}
do
    for pver in ${PYTHON_VERSION}
    do  
        echo "[INFO] python-${pver}: load environment python/python/${pver}"
        module load python/python/${pver}

        if [ "$OS_NAME" == "rhel8" ]; then
            VENV_DIR=${venv_prefix}/venv/${pver}
        else
            VENV_DIR=${venv_prefix}/venv-${OS_NAME}/${pver}
            
        fi  

        python3 -m venv ${VENV_DIR}
        chmod 755 ${VENV_DIR}/bin/*ctivate*
        source ${VENV_DIR}/bin/activate

        if [ "${PIP_PACKAGES}" != "" ]; then
            echo "[INFO] python-${pver}: install package ${PIP_PACKAGES} to ${VENV_DIR}"
            pip3 install ${PIP_PACKAGES}
        fi  

        # install git-repo
        if [ ! -e "${VENV_DIR}/bin/repo" ] || [ "${INSTALL_REPO}" == "true" ]; then
            echo "[INFO] python-${pver}: install repo launcher to ${VENV_DIR}"
            curl https://storage.googleapis.com/git-repo-downloads/repo &gt; ${VENV_DIR}/bin/repo
            sed -i 's@^#!/usr/bin/env python$@#!/usr/bin/env python3@g' ${VENV_DIR}/bin/repo
            chmod 755 ${VENV_DIR}/bin/repo
        fi  

        module unload python
        deactivate
    done
done
</command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.logparser.LogParserPublisher plugin="log-parser@2.2">
      <unstableOnWarning>false</unstableOnWarning>
      <failBuildOnError>false</failBuildOnError>
      <showGraphs>true</showGraphs>
      <parsingRulesPath>/var/lib/jenkins/plugins/log-parser/square_brackets_log.txt</parsingRulesPath>
      <useProjectRule>false</useProjectRule>
    </hudson.plugins.logparser.LogParserPublisher>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@2.2.0">
      <template>#${BUILD_NUMBER}</template>
      <descriptionTemplate>${PYTHON_VERSION} (${PIP_PACKAGES})</descriptionTemplate>
      <runAtStart>true</runAtStart>
      <runAtEnd>false</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>