<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.41">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.9.1"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.9.1">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.3"/>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.4">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.93">
    <script>// sAccount: The slurm account
def sAccount = &apos;verif&apos;
def confBuildDir
def jid
def des
def dirExist
def buildLogName

pipeline {
    agent {label &apos;tiny_rhel8&apos;}
    stages {
        stage(&apos;Request Slurm Resource&apos;) {
            steps {
                script {
                    // confBuildDir: this build will run in this folder
                    confBuildDir = &quot;/scratch/jenkins/archived-builds/$JOB_NAME/$BUILD_ID&quot;
                    // jid: the jod ID that is allocated by slurm
                    jid = sh (
                        script: &quot;salloc --account=${sAccount} --job-name=$JOB_NAME --time=20 -c 4 --mem=16G -D /tmp --no-shell 2&gt;&amp;1|grep Granted|grep -oE &apos;[0-9]+&apos;&quot;,
                        returnStdout: true).trim()
                    // des: the server that is allocated by slurm
                    des = sh (
                        script: &quot;scontrol show job ${jid}|grep &apos;[^a-zA-Z]NodeList=&apos; |awk -F&apos;=&apos; &apos;{print \$2}&apos;&quot;,
                        returnStdout: true).trim()
                    // dirExist: check if the build folder is made successfully
                    dirExist = sh (
                        script: &quot;srun --account=${sAccount} --jobid=${jid} -D /tmp mkdir -p ${confBuildDir}&quot;,
                        returnStatus: true) == 0
                        
                    sh &quot;hostname&quot;
                }
            }
        }
        stage (&apos;build&apos;) {
            steps {
                script {
                    echo &quot;got host: $des&quot;
                    sh &quot;&quot;&quot;
                        srun_cmd=&quot;srun --account=${sAccount} --export=ALL --jobid=${jid} -D ${confBuildDir}&quot;
                        \$srun_cmd hostname
                        \$srun_cmd pwd
                        \$srun_cmd ls
                    &quot;&quot;&quot;
                }
            }
        }
    }
    post {
        always {
            script {
                if (jid) {
                    sh &quot;echo pass&quot;
                }
            } //script
        } //always
    } //post
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>