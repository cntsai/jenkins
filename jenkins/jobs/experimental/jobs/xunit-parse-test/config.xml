<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.40">
  <actions/>
  <description>Testing</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.1.1"/>
    <org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty/>
    <org.jenkinsci.plugins.workflow.job.properties.DisableResumeJobProperty/>
    <org.jenkinsci.plugins.workflow.job.properties.DurabilityHintJobProperty>
      <hint>SURVIVABLE_NONATOMIC</hint>
    </org.jenkinsci.plugins.workflow.job.properties.DurabilityHintJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>results</name>
          <description>Results XML ABS Path to be parsed</description>
          <defaultValue>/home/marshalla/builds/coreip_u84_axi4/sim/fpv/results.xml</defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>result_area</name>
          <description>Area to Copy Results.xml listed above too</description>
          <defaultValue>builds/coreip_u84_axi4/sim/fpv</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.3">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.83">
    <script>

node(&quot;tiny&quot;) {
    
    ws(&quot;/scratch/jenkins/archived-builds/${env.JOB_NAME}/${env.BUILD_ID}&quot;) {
    
        stage(&quot;Setup Repo&quot;) {
            HOST=sh returnStdout: true, script: &apos;/bin/hostname -f&apos;
            echo &quot;host is $HOST&quot;
            
            LISTING=sh returnStdout: true, script: &apos;/bin/ls -lastr&apos;
            echo &quot;ls is $LISTING&quot;
            
            // Copy Filesa
            if (params.result_area != &apos;&apos;) {
                sh returnStatus: true, script: &quot;mkdir -p $params.result_area&quot;
                sh returnStatus: true, script: &quot;cp $params.results $params.result_area/.&quot;
            } else {
                sh returnStatus: true, script: &quot;cp $params.results .&quot;
            }
        }
        stage(&quot;Process XML&quot;) {
            // Parse results.xml generated by sitest
            step([
                $class: &apos;XUnitPublisher&apos;, 
                testTimeMargin: &apos;3000&apos;, 
                thresholdMode: 1, 
                thresholds: [
                    [
                        $class: &apos;FailedThreshold&apos;,
                        failureNewThreshold: &apos;&apos;,
                        failureThreshold: &apos;0&apos;,
                        unstableNewThreshold: &apos;&apos;,
                        unstableThreshold: &apos;&apos;,
                    ],
                    [
                        $class: &apos;SkippedThreshold&apos;,
                        failureNewThreshold: &apos;&apos;,
                        failureThreshold: &apos;0&apos;,
                        unstableNewThreshold: &apos;&apos;,
                        unstableThreshold: &apos;&apos;,
                    ],
                ],
                tools: [
                    JUnit(
                        deleteOutputFiles: true, 
                        failIfNotNew: true, 
                        pattern: &quot;builds/*/sim*/*/results.xml&quot;, 
                        skipNoTestFiles: true, 
                        stopProcessingIfError: true
                    )
                ]
            ])
    
        }
        stage(&quot;Clean WS&quot;) {
            cleanWs cleanWhenAborted: false, cleanWhenFailure: false, notFailBuild: true
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>