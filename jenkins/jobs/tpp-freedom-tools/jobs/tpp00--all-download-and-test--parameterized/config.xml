<?xml version="1.1" encoding="UTF-8" standalone="no"?><flow-definition plugin="workflow-job@2.41">
  <actions/>
  <description>Start tests across tpp01, tpp02, tpp03, tpp04, tpp05 and tpp06.&#13;
</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.3"/>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.32">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>REPO_GITURL</name>
          <description>git-url of the freedom-tools repo to use</description>
          <defaultValue>git@github.com:sifive/freedom-tools-private.git</defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>REPO_BRANCH</name>
          <description>branch of the freedom-tools repo to use</description>
          <defaultValue>main</defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>TEST_TARGET</name>
          <description>Makefile regress target (module) to run</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>clean</string>
              <string>toolchain</string>
              <string>toolsuite</string>
              <string>qemu</string>
              <string>qemu-lite</string>
              <string>sdk-utilities</string>
              <string>spike-dasm</string>
              <string>buildtools</string>
              <string>openocd</string>
              <string>trace-decoder</string>
              <string>xc3sprog</string>
              <string>binutils-only</string>
              <string>gcc-only</string>
              <string>gdb-only</string>
              <string>llvm-only</string>
              <string>toolchain-linux</string>
              <string>toolsuite-linux</string>
              <string>binutils-linux</string>
              <string>gcc-linux</string>
              <string>gdb-linux</string>
              <string>llvm-linux</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BUILD_SUFFIX</name>
          <description>Suffix for download directory - parameterized-[suffix] - like build number and build target from build job</description>
          <defaultValue>0-clean</defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>DOWNLOAD_FILES</name>
          <description>Download files from /work/dev-tools/preview/freedom-tools-packages/parameterized-*</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>WIPEOUT_FILES</name>
          <description>Delete test files on test server</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>TEST_ON_MACOS</name>
          <description>Test on MacOS</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>TEST_ON_WINDOWS</name>
          <description>Test on Windows</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>TEST_ON_UBUNTU</name>
          <description>Test on Ubuntu</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>TEST_ON_CENTOS</name>
          <description>Test on CentOS</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>TEST_ON_REDHAT</name>
          <description>Test on Redhat (always enabled independent of this checkbox)</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>EXTRA_SUFFIX</name>
          <description>Extra package version suffix</description>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>EXTRA_OPTION</name>
          <description>Extra text to control a test</description>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TOOLCHAIN_META_GITREF</name>
          <description>Sha1 or branch name of toolchain-meta-next for toolchain CI chaining</description>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.4">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit/>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.93">
    <script>    stage('Trigger Builds In Parallel') {
        def BUILD_STATUS = 'FAILED'
        def BUILD_COLOR = '#FF0000'
        try {
                if (params.DOWNLOAD_FILES == true) {
                    build job: 'tpp06--download-binary-packages--parameterized', parameters: [[$class: 'StringParameterValue', name: 'BUILD_SUFFIX', value: String.valueOf(BUILD_SUFFIX)]]

                    if (params.TEST_ON_WINDOWS == true) {
                        sleep 5
                        build job: 'tpp02--download-binary-packages--parameterized', parameters: [[$class: 'StringParameterValue', name: 'BUILD_SUFFIX', value: String.valueOf(BUILD_SUFFIX)]]
                    }
                    if (params.TEST_ON_CENTOS == true) {
                       sleep 5
                       build job: 'tpp04--download-binary-packages--parameterized', parameters: [[$class: 'StringParameterValue', name: 'BUILD_SUFFIX', value: String.valueOf(BUILD_SUFFIX)]]
                    }
                    if (params.TEST_ON_UBUNTU == true) {
                        sleep 5
                        build job: 'tpp03--download-binary-packages--parameterized', parameters: [[$class: 'StringParameterValue', name: 'BUILD_SUFFIX', value: String.valueOf(BUILD_SUFFIX)]]
                    }
                    if (params.TEST_ON_MACOS == true) {
                        sleep 5
                        build job: 'tpp01--download-binary-packages--parameterized', parameters: [[$class: 'StringParameterValue', name: 'BUILD_SUFFIX', value: String.valueOf(BUILD_SUFFIX)]]
                    }
                }

            // Freestyle build trigger calls a list of jobs
            // Pipeline build() step only calls one job
            // To run all three jobs in parallel, we use "parallel" step
            // https://jenkins.io/doc/pipeline/examples/#jobs-in-parallel
                    parallel(
                        mac: {
                            if (params.TEST_ON_MACOS == true) {
                                build job: 'tpp01--test-binary-packages--parameterized', parameters: [
                                    [$class: 'StringParameterValue', name: 'REPO_GITURL', value: String.valueOf(REPO_GITURL)],
                                    [$class: 'StringParameterValue', name: 'REPO_BRANCH', value: String.valueOf(REPO_BRANCH)],
                                    [$class: 'StringParameterValue', name: 'EXTRA_SUFFIX', value: String.valueOf(EXTRA_SUFFIX)],
                                    [$class: 'StringParameterValue', name: 'EXTRA_OPTION', value: String.valueOf(EXTRA_OPTION)],
                                    [$class: 'StringParameterValue', name: 'TEST_TARGET', value: String.valueOf(TEST_TARGET)],
                                    [$class: 'StringParameterValue', name: 'TOOLCHAIN_META_GITREF', value: String.valueOf(TOOLCHAIN_META_GITREF)]
                                ]
                                if (params.WIPEOUT_FILES == true) {
                                }
                            }
                        },
                        ubuntu: {
                            if (params.TEST_ON_UBUNTU == true) {
                                build job: 'tpp03--test-binary-packages--parameterized', parameters: [
                                    [$class: 'StringParameterValue', name: 'REPO_GITURL', value: String.valueOf(REPO_GITURL)],
                                    [$class: 'StringParameterValue', name: 'REPO_BRANCH', value: String.valueOf(REPO_BRANCH)],
                                    [$class: 'StringParameterValue', name: 'EXTRA_SUFFIX', value: String.valueOf(EXTRA_SUFFIX)],
                                    [$class: 'StringParameterValue', name: 'EXTRA_OPTION', value: String.valueOf(EXTRA_OPTION)],
                                    [$class: 'StringParameterValue', name: 'TEST_TARGET', value: String.valueOf(TEST_TARGET)],
                                    [$class: 'StringParameterValue', name: 'TOOLCHAIN_META_GITREF', value: String.valueOf(TOOLCHAIN_META_GITREF)]
                                ]
                                if (params.WIPEOUT_FILES == true) {
                                }
                            }
                        },
                        centos: {
                            if (params.TEST_ON_CENTOS == true) {
                                build job: 'tpp04--test-binary-packages--parameterized', parameters: [
                                    [$class: 'StringParameterValue', name: 'REPO_GITURL', value: String.valueOf(REPO_GITURL)],
                                    [$class: 'StringParameterValue', name: 'REPO_BRANCH', value: String.valueOf(REPO_BRANCH)],
                                    [$class: 'StringParameterValue', name: 'EXTRA_SUFFIX', value: String.valueOf(EXTRA_SUFFIX)],
                                    [$class: 'StringParameterValue', name: 'EXTRA_OPTION', value: String.valueOf(EXTRA_OPTION)],
                                    [$class: 'StringParameterValue', name: 'TEST_TARGET', value: String.valueOf(TEST_TARGET)],
                                    [$class: 'StringParameterValue', name: 'TOOLCHAIN_META_GITREF', value: String.valueOf(TOOLCHAIN_META_GITREF)]
                                ]
                                if (params.WIPEOUT_FILES == true) {
                                }
                            }
                        },
                        windows: {
                            if (params.TEST_ON_WINDOWS == true) {
                                build job: 'tpp02--test-binary-packages--parameterized', parameters: [
                                    [$class: 'StringParameterValue', name: 'REPO_GITURL', value: String.valueOf(REPO_GITURL)],
                                    [$class: 'StringParameterValue', name: 'REPO_BRANCH', value: String.valueOf(REPO_BRANCH)],
                                    [$class: 'StringParameterValue', name: 'EXTRA_SUFFIX', value: String.valueOf(EXTRA_SUFFIX)],
                                    [$class: 'StringParameterValue', name: 'EXTRA_OPTION', value: String.valueOf(EXTRA_OPTION)],
                                    [$class: 'StringParameterValue', name: 'TEST_TARGET', value: String.valueOf(TEST_TARGET)],
                                    [$class: 'StringParameterValue', name: 'TOOLCHAIN_META_GITREF', value: String.valueOf(TOOLCHAIN_META_GITREF)]
                                ]
                                if (params.WIPEOUT_FILES == true) {
                                }
                            }
                        },
                        redhat: {
                            build job: 'tpp06--test-binary-packages--parameterized', parameters: [
                                [$class: 'StringParameterValue', name: 'REPO_GITURL', value: String.valueOf(REPO_GITURL)],
                                [$class: 'StringParameterValue', name: 'REPO_BRANCH', value: String.valueOf(REPO_BRANCH)],
                                [$class: 'StringParameterValue', name: 'EXTRA_SUFFIX', value: String.valueOf(EXTRA_SUFFIX)],
                                [$class: 'StringParameterValue', name: 'EXTRA_OPTION', value: String.valueOf(EXTRA_OPTION)],
                                [$class: 'StringParameterValue', name: 'TEST_TARGET', value: String.valueOf(TEST_TARGET)],
                                [$class: 'StringParameterValue', name: 'TOOLCHAIN_META_GITREF', value: String.valueOf(TOOLCHAIN_META_GITREF)]
                            ]
                            if (params.WIPEOUT_FILES == true) {
                            }
                        },
                        failFast: false
                    )

            BUILD_STATUS = 'PASSED'
            BUILD_COLOR = '#00FF00'
        }
        finally {
            slackSend(
                channel: '#freedom-tools-ci',
                message: "${BUILD_STATUS} : ${JOB_NAME} # ${BUILD_NUMBER} @ ${BUILD_URL} ? REPO_GITURL=${REPO_GITURL} REPO_BRANCH=${REPO_BRANCH} TEST_TARGET=${TEST_TARGET} BUILD_SUFFIX=${BUILD_SUFFIX} DOWNLOAD_FILES=${DOWNLOAD_FILES} WIPEOUT_FILES=${WIPEOUT_FILES} EXTRA_SUFFIX=${EXTRA_SUFFIX} EXTRA_OPTION=${EXTRA_OPTION} TEST_ON_MACOS=${TEST_ON_MACOS} TEST_ON_CENTOS=${TEST_ON_CENTOS} TEST_ON_UBUNTU=${TEST_ON_UBUNTU} TEST_ON_WINDOWS=${TEST_ON_WINDOWS} TEST_ON_REDHAT=${TEST_ON_REDHAT} TOOLCHAIN_META_GITREF=${TOOLCHAIN_META_GITREF}",
                color: BUILD_COLOR
            )
        }
    }
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>