<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Qemu test strness-ng</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.3"/>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>10</daysToKeep>
        <numToKeep>5</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.18.1">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>FUSDK_MACHINE</name>
          <description>Pass MACHINE variable to bitbake</description>
          <defaultValue>qemuriscv64</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>META_SIFIVE_PRIVATE_BRANCH</name>
          <description>branch name of meta-sifive-private</description>
          <defaultValue>dev/maxh/fix_gparted_error_by_update_meta-OE</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>FUSDK_MANIFEST</name>
          <description>manifest.xml of meta-sifive-private</description>
          <defaultValue>tools/manifests/sifive.xml</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BITBAKE_PACKAGE</name>
          <description>the package name of bitbak</description>
          <defaultValue>demo-coreip-cli</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NUM_OF_CORES</name>
          <description>Decide how many cores for build.</description>
          <defaultValue>32</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NFS_Path</name>
          <description></description>
          <defaultValue>/work/jenkins/syssw</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SSTATE_Sub_Path</name>
          <description></description>
          <defaultValue>share-sstate</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>Build_Sub_Path</name>
          <description></description>
          <defaultValue>FUSDK-build</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>Patch</name>
          <description></description>
          <defaultValue>true</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.4">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>tiny</assignedNode>
  <canRoam>false</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <authToken>AutoBuild_Max</authToken>
  <triggers>
    <hudson.triggers.SCMTrigger>
      <spec>0 0 1 * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# for debugging
echo $NODE_NAME
hostname
build_date=`date +%m-%d-%Y`
echo &quot;build date = &lt;$build_date&gt;&quot;
echo &quot;USER=$USER&quot;
echo &quot;HOME=$HOME&quot;
echo &quot;PWD=$PWD&quot;
echo &quot;WORKSPACE=$WORKSPACE&quot;
echo &quot;git config --global --list&quot;

git config --global --replace-all url.&quot;git@github.com:&quot;.insteadOf ssh://git@github.com/
git config --global --add url.&quot;git@github.com:&quot;.insteadOf git://git@github.com/

git config --global --list

# clear and reset folder if needed
rm -rf /scratch/syssw/automation/jenkins/$FUSDK_MACHINE
workdir=&quot;/scratch/syssw/automation/jenkins/$FUSDK_MACHINE&quot;
# workdir=&quot;/work/jenkins/meta_sifive_build/$FUSDK_MACHINE&quot;
mkdir -p $workdir
chmod a+w -R $workdir
cd $workdir


echo &quot;check repo&quot;
mkdir ~/bin
PATH=~/bin:$PATH
curl https://storage.googleapis.com/git-repo-downloads/repo &gt; ~/bin/repo
chmod a+x ~/bin/repo


echo &quot;load python3&quot;
module load python/python/3.8.1

echo &quot;fallback check&quot;
if ! python3 -c &apos;import sys; assert sys.version_info &gt;= (3,6)&apos; &gt; /dev/null; then
    echo &quot;python load failed&quot;
    export PATH=/sifive/tools/python/python/3.8.1/bin:$PATH
    python3 --version
fi

#
echo &quot;clean old meta-sifive-private&quot;
# rm -rf .repo ./* ./build
# rm -rf meta-sifive-private meta-clang meta-riscv meta-openembedded openembedded-core .repo

# clone FUSDK
echo ${META_SIFIVE_PRIVATE_BRANCH}
repo init -u git@github.com:sifive/meta-sifive-private -b $META_SIFIVE_PRIVATE_BRANCH -m $FUSDK_MANIFEST
repo sync

# OpenEmbedded-Core requires GCC 6 or newer to be available on the host system, download the pre-built one
./openembedded-core/scripts/install-buildtools -r yocto-3.2_M2 -t 20200729
. ./openembedded-core/buildtools/environment-setup-x86_64-pokysdk-linux




# Setting up Build Environment
. ./meta-sifive-private/setup.sh

echo $PATH
echo $LD_LIBRARY_PATH


if [ &quot;${Patch}&quot; == &quot;true&quot; ];then
	pwd
	cd ../meta-sifive-private
    ls
    chmod 755 ./patch
    ./patch
fi


rm -rf $workdir/build/tmp-glibc/deploy/images/$FUSDK_MACHINE
mkdir -p $workdir/build/tmp-glibc/deploy/images/$FUSDK_MACHINE

mkdir -p $workdir/build/tmp-glibc/deploy/images/$FUSDK_MACHINE/
mkdir -p $workdir/build/tmp-glibc/work/x86_64-linux/qemu-helper-native/
cp -f $NFS_Path/$Build_Sub_Path/$FUSDK_MACHINE/Image*.bin           $workdir/build/tmp-glibc/deploy/images/$FUSDK_MACHINE/
cp -f $NFS_Path/$Build_Sub_Path/$FUSDK_MACHINE/fw*.elf              $workdir/build/tmp-glibc/deploy/images/$FUSDK_MACHINE/
cp -f $NFS_Path/$Build_Sub_Path/$FUSDK_MACHINE/demo*.ext4           $workdir/build/tmp-glibc/deploy/images/$FUSDK_MACHINE/
cp -f $NFS_Path/$Build_Sub_Path/$FUSDK_MACHINE/demo*.conf           $workdir/build/tmp-glibc/deploy/images/$FUSDK_MACHINE/
cp -rf $NFS_Path/$Build_Sub_Path/$FUSDK_MACHINE/qemu-native/  		$workdir/build/tmp-glibc/work/x86_64-linux/qemu-helper-native/
cp -rf $NFS_Path/$Build_Sub_Path/$FUSDK_MACHINE/sysroots			$workdir/build/tmp-glibc/

#tree $workdir/build/tmp-glibc/work/x86_64-linux/qemu-helper-native/
mv $workdir/build/tmp-glibc/work/x86_64-linux/qemu-helper-native/qemu-native/	$workdir/build/tmp-glibc/work/x86_64-linux/qemu-helper-native/1.0-r1
mv $workdir/build/tmp-glibc/sysroots/											$workdir/build/tmp-glibc/sysroots-uninative/
#/build/tmp-glibc/work/x86_64-linux/qemu-helper-native/1.0-r1/recipe-sysroot-native/usr/bin/qemu-system-riscv64




cd ../meta-sifive-private/
chmod 755 qemu_stress-ng.exp
./qemu_stress-ng.exp


echo &quot;The expect script result: $?&quot;

rm -rf /scratch/syssw/automation/jenkins/$FUSDK_MACHINE</command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>strace_log</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
      <followSymlinks>false</followSymlinks>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.13"/>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@1.0.0">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <com.cloudbees.jenkins.plugins.sshagent.SSHAgentBuildWrapper plugin="ssh-agent@1.22">
      <credentialIds>
        <string>ad25d95a-4a30-4cc9-bda9-e836d51af0b9</string>
      </credentialIds>
      <ignoreMissing>false</ignoreMissing>
    </com.cloudbees.jenkins.plugins.sshagent.SSHAgentBuildWrapper>
  </buildWrappers>
</project>