<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Running the automation script on epsilon machine</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.7"/>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.18.1">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.6">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@4.10.3">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>git@github.com:sifive/syssw_automation_tools.git</url>
        <credentialsId>ad25d95a-4a30-4cc9-bda9-e836d51af0b9</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="empty-list"/>
    <extensions/>
  </scm>
  <assignedNode>epsilon05</assignedNode>
  <canRoam>false</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <jenkins.triggers.ReverseBuildTrigger>
      <spec></spec>
      <upstreamProjects>obsolete/fusdk-meta-sifive-private</upstreamProjects>
      <threshold>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
        <completeBuild>true</completeBuild>
      </threshold>
    </jenkins.triggers.ReverseBuildTrigger>
    <hudson.triggers.TimerTrigger>
      <spec>H 0 * * 1,2,3,4,5</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

echo $NODE_NAME
hostname
build_date=`date +%m-%d-%Y`
echo &quot;build date = &lt;$build_date&gt;&quot;
echo &quot;USER=$USER&quot;
echo &quot;HOME=$HOME&quot;
echo &quot;PWD=$PWD&quot;

ls -al .ssh/

git help -a | grep credential-

#echo &quot;get server&quot;
#boardtest-alloc -t vcu118

#if [ &quot;$SLURM_NODELIST&quot; == &quot;&quot; ]; then
#    echo &quot;No epsilon allocation, exit.....&quot;
#    exit 1
#fi

#nodeserver=`echo $SLURM_NODELIST | grep epsilon05`

#if [ &quot;$nodeserver&quot; == &quot;&quot; ]; then
#    echo &quot;epsilon05 is in use, exit.....&quot;
#    exit
#    exit 1
#fi

workdir=$PWD
ls -al

echo &quot;check repo&quot;
mkdir ~/bin
PATH=~/bin:$PATH
curl https://storage.googleapis.com/git-repo-downloads/repo &gt; ~/bin/repo
chmod a+x ~/bin/repo

cp /home/jackat/projects/mongoose/ipdelivery/viu75_256mc/viu75_256_210609_ipdelivery.tar.gz .
tar zxvf viu75_256_210609_ipdelivery.tar.gz 

echo &quot;load python3&quot;
module load python/python/3.8.1

echo &quot;fallback check&quot;
if ! python3 -c &apos;import sys; assert sys.version_info &gt;= (3,6)&apos; &gt; /dev/null; then
    echo &quot;python load failed&quot;
    export PATH=/sifive/tools/python/python/3.8.1/bin:$PATH
    python3 --version
fi


#
pip3 install pyserial
git submodule init; git submodule update --recursive


echo &quot;download binaries&quot;
wget https://jenkins.internal.sifive.com/view/Tools/job/syssw-automation/job/fusdk-meta-sifive-private/lastSuccessfulBuild/artifact/FUSDK_build/sifive-fpga/fw_dynamic.bin


./fpga_regression_tw/script/pro_fpga_run_linux.py -i ini_templates/vcu118_viu75_256mc_ymodem_on_epsilon.ini -p /dev/ttyUSB1 -l run.log -v -skip-gengdb -y -b2uboot
result=$?

#exit
exit $result</command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.17"/>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@1.0.1">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <com.cloudbees.jenkins.plugins.sshagent.SSHAgentBuildWrapper plugin="ssh-agent@1.24.1">
      <credentialIds>
        <string>ad25d95a-4a30-4cc9-bda9-e836d51af0b9</string>
      </credentialIds>
      <ignoreMissing>true</ignoreMissing>
    </com.cloudbees.jenkins.plugins.sshagent.SSHAgentBuildWrapper>
  </buildWrappers>
</project>